{
  "language": "python",
  "location": {
    "start_line": 1,
    "start_column": 0,
    "end_line": 82,
    "end_column": 0
  },
  "path": "input/decorators_and_metadata.py",
  "stats": {
    "class": 3,
    "function": 8,
    "import": 4
  },
  "structure": {
    "classes": [
      {
        "extends": [
          "Enum"
        ],
        "location": {
          "end_line": 40,
          "start_line": 34
        },
        "name": "Status",
        "visibility": "public"
      },
      {
        "location": {
          "end_line": 54,
          "start_line": 42
        },
        "members": {
          "methods": [
            {
              "implementation": "        \"\"\"Validate task after initialization.\"\"\"\n        if not self.name:\n            raise ValueError(\"Task name cannot be empty\")\n",
              "location": {
                "end_line": 54,
                "start_line": 50
              },
              "name": "__post_init__",
              "parameters": [
                {
                  "name": "self"
                }
              ],
              "visibility": "private"
            }
          ]
        },
        "name": "Task",
        "visibility": "public"
      },
      {
        "location": {
          "end_line": 82,
          "start_line": 55
        },
        "members": {
          "methods": [
            {
              "implementation": "        \"\"\"Cached expensive operation.\"\"\"\n        return x ** 2\n    ",
              "location": {
                "end_line": 62,
                "start_line": 59
              },
              "name": "expensive_operation",
              "parameters": [
                {
                  "name": "self"
                },
                {
                  "name": "x",
                  "type": "int"
                }
              ],
              "returns": "int",
              "visibility": "public"
            },
            {
              "implementation": "        \"\"\"Process data (deprecated).\"\"\"\n        return self._internal_process(data)\n    ",
              "location": {
                "end_line": 68,
                "start_line": 65
              },
              "name": "process",
              "parameters": [
                {
                  "name": "self"
                },
                {
                  "name": "data",
                  "type": "Any"
                }
              ],
              "returns": "Any",
              "visibility": "public"
            },
            {
              "implementation": "        \"\"\"Internal processing logic.\"\"\"\n        return data\n    ",
              "location": {
                "end_line": 72,
                "start_line": 69
              },
              "name": "_internal_process",
              "parameters": [
                {
                  "name": "self"
                },
                {
                  "name": "data",
                  "type": "Any"
                }
              ],
              "returns": "Any",
              "visibility": "private"
            },
            {
              "implementation": "        \"\"\"Validate data structure.\"\"\"\n        return all(k in data for k in ['id', 'value'])\n    ",
              "location": {
                "end_line": 78,
                "start_line": 75
              },
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": "Dict[str"
                },
                {
                  "name": "Any]"
                }
              ],
              "returns": "bool",
              "visibility": "public"
            },
            {
              "implementation": "        \"\"\"Get cache information.\"\"\"\n        return self.expensive_operation.cache_info()._asdict()",
              "location": {
                "end_line": 82,
                "start_line": 80
              },
              "name": "cache_info",
              "parameters": [
                {
                  "name": "self"
                }
              ],
              "returns": "Dict[str, Any]",
              "visibility": "public"
            }
          ]
        },
        "name": "Processor",
        "visibility": "public"
      }
    ],
    "functions": [
      {
        "implementation": "    \"\"\"Time function execution.\"\"\"\n    @wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -\u003e R:\n        import time\n        start = time.time()\n        result = func(*args, **kwargs)\n        print(f\"{func.__name__} took {time.time() - start:.2f}s\")\n        return result\n    return wrapper\n",
        "location": {
          "end_line": 21,
          "start_line": 11
        },
        "name": "timer",
        "parameters": [
          {
            "name": "func",
            "type": "Callable[P"
          },
          {
            "name": "R]"
          }
        ],
        "returns": "Callable[P, R]",
        "visibility": "public"
      },
      {
        "implementation": "    \"\"\"Mark function as deprecated.\"\"\"\n    def decorator(func: Callable[P, R]) -\u003e Callable[P, R]:\n        @wraps(func)\n        def wrapper(*args: P.args, **kwargs: P.kwargs) -\u003e R:\n            import warnings\n            warnings.warn(f\"{func.__name__} is deprecated: {message}\", \n                         DeprecationWarning, stacklevel=2)\n            return func(*args, **kwargs)\n        return wrapper\n    return decorator\n",
        "location": {
          "end_line": 33,
          "start_line": 22
        },
        "name": "deprecated",
        "parameters": [
          {
            "name": "message",
            "type": "str"
          }
        ],
        "returns": "Callable[[Callable[P, R]], Callable[P, R]]",
        "visibility": "public"
      }
    ],
    "imports": [
      {
        "location": {
          "end_line": 3,
          "start_line": 3
        },
        "module": "functools",
        "symbols": [
          {
            "name": "lru_cache"
          },
          {
            "name": "wraps"
          }
        ],
        "type": "from"
      },
      {
        "location": {
          "end_line": 4,
          "start_line": 4
        },
        "module": "typing",
        "symbols": [
          {
            "name": "Callable"
          },
          {
            "name": "Any"
          },
          {
            "name": "TypeVar"
          },
          {
            "name": "ParamSpec"
          }
        ],
        "type": "from"
      },
      {
        "location": {
          "end_line": 5,
          "start_line": 5
        },
        "module": "dataclasses",
        "symbols": [
          {
            "name": "dataclass"
          },
          {
            "name": "field"
          }
        ],
        "type": "from"
      },
      {
        "location": {
          "end_line": 6,
          "start_line": 6
        },
        "module": "enum",
        "symbols": [
          {
            "name": "Enum"
          },
          {
            "name": "auto"
          }
        ],
        "type": "from"
      }
    ]
  },
  "type": "file",
  "version": "3.x"
}
