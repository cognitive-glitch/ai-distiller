<file path="/home/janreges/ai-distiller/test-data/php/construct4_complex.php">
import App\Utils\Timestampable
import Psr\Log\LoggerInterface
# A common external interface

class EmailPayload:
    # Uses traits: Timestampable
    +readonly recipient: string
    +readonly subject: string
    +readonly body: string
    +__construct(recipient: string, subject: string, body: string):
        {
                $this->touch(); // Method from the Timestampable trait
            }

class Notifier:
    -logger: LoggerInterface
    +__construct(logger: LoggerInterface):
        {}
    +send(payload: EmailPayload|string) -> void:
        {
                if (is_string($payload)) {
                    $this->logger->info("Raw string notification: {$payload}");
                    return;
                }
                $this->logger->info(
                    "Sending email to {$payload->recipient} with subject '{$payload->subject}'"
                );
                // Actual sending logic would be here
            }
# --- In another file: App/Utils/Timestampable.php ---
# PHP Trait

class trait Timestampable:
    -createdAt: ?\DateTimeImmutable
    +touch() -> void:
        {
                if ($this->createdAt === null) {
                    $this->createdAt = new \DateTimeImmutable();
                }
            }
    +getCreationDate() -> ?\DateTimeImmutable:
        {
                return $this->createdAt;
            }
</file>
