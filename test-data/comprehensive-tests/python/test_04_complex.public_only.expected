<file path="/home/janreges/ai-distiller/test-data/comprehensive-tests/python/test_04_complex.py">
# test_04_complex.py
import asyncio

class EnforceAsyncMeta(type):
    """A metaclass that ensures all public methods in a class
    (except __init__) are asynchronous."""
    +def __new__(cls, name, bases, dct)

class Connectable:
    # An abstract mixin for connectable services.
    +async def connect(self)

class Streamable:
    # An abstract mixin for streamable services.
    +async def stream_data(self)

class AsyncService(Connectable, Streamable, metaclass=EnforceAsyncMeta):
    """A complex service demonstrating multiple inheritance, async operations,
    and a custom metaclass."""
    +def __init__(self, service_name: str)
    +async def start_session(self)
    +async def process(self)
+async def main()
</file>