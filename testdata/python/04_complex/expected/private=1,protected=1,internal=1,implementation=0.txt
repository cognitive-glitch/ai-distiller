<file path="source.py">
from typing import Protocol, List, Dict, Callable, Any

class Plugin(Protocol):
    name = str
    execute(self, data: Dict[str, Any]) -> None
register_plugin(name: str) -> Callable[[Callable[[], Plugin]], None]

class DataProcessingPlugin:
    name = "data_processor"
    execute(self, data: Dict[str, Any]) -> None
@register_plugin(name=DataProcessingPlugin.name)
create_data_plugin() -> Plugin

class PluginManager:
    __init__(self)
    activate(self, name: str) -> None
    run_all(self, data: Dict[str, Any])
</file>
