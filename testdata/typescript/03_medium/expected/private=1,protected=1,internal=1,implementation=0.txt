<file path="source.ts">

interface INotifiable<P>:
    method handleNotification(payload: P): void
type NotificationPayload<T> = {
  recipient: T;
  message: string;
  timestamp: Date;
}

abstract class BaseNotificationService:
    field protected transportName: string
    function constructor(transportName: string)
    abstract function send<T extends { id: string | number }>(payload: NotificationPayload<T>) -> Promise<boolean>
    protected function log(message: string) -> void

class EmailNotificationService extends BaseNotificationService:
    function constructor()
    async function send<T extends { id: string | number; email: string }>(payload: NotificationPayload<T>) -> Promise<boolean>
</file>
