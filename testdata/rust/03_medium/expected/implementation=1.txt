<file path="source.rs">
use std::fmt::{Debug, Display};

enum AnalysisError {
    IoError(std::io::Error),
    EmptyContent,
    InvalidFormat(String),
}

trait DataSource {
}

struct AnalysisResult<T: Display>;

impl AnalysisResult<T> {

    fn new(source_id: String, result: T) -> Self {
        pub fn new(source_id: String, result: T) -> Self {
                Self {
                    source_id,
                    result,
                    metadata: None,
                }
            }
    }
}

fn analyze(source: &'a S) -> Result<AnalysisResult<String>, AnalysisError>

impl DataSource for InMemorySource {
}

impl Debug for InMemorySource {
}

trait Processor<'a, T> {
}

struct StringProcessor;

impl Processor<'a, String> for StringProcessor {
}
</file>
