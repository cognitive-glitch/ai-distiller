<file path="source.rs">
use std::sync::{Arc, Mutex};
use std::ffi::{c_char, CStr};
use std::future::Future;
use std::pin::Pin;

struct Config;

struct AnalysisService;

impl AnalysisService {

    new() -> Self

    async validate_code(&self, code: &str) -> Result<bool, &'static str>
}

trait AsyncProcessor {
    type Item;
    type Error;

    async process_async(&self, item: Self::Item) -> Result<String, Self::Error>

    async batch_process(&self, items: Vec<Self::Item>) -> Vec<Result<String, Self::Error>>
}

impl AsyncProcessor for AnalysisService {
}

impl FFIData {

    new_integer(value: i64) -> Self

    get_integer(&self) -> i64
}
</file>
