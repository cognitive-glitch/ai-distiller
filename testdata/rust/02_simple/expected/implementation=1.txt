<file path="source.rs">

struct SourceFile {
    pub path: String,
}

trait Summarizable {
}

impl SourceFile {

    fn new(path: String, content: String) -> Self {
        pub fn new(path: String, content: String) -> Self {
                let lines_of_code = content.lines().count() as u32;
                Self {
                    path,
                    content,
                    lines_of_code,
                }
            }
    }

    fn line_count(&self) -> u32 {
        pub fn line_count(&self) -> u32 {
                self.lines_of_code
            }
    }
}

impl Summarizable for SourceFile {
}

trait FileOperations {
}

enum FileError {
    NotFound,
    PermissionDenied,
    InvalidContent,
}

impl FileOperations for SourceFile {
}
</file>
