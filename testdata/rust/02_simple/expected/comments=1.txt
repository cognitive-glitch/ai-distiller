<file path="source.rs">
// 02_simple.rs
// A test case for simple structs, impls, and traits.
// Represents a source file to be processed.
// The parser should handle struct definitions with public and private fields.

struct SourceFile {
    pub path: String,
}
// A trait for items that can be summarized.
// This tests the ability to parse trait definitions and their methods.

trait Summarizable {
}
// Default implementation for short summary
// Implementation of methods for the SourceFile struct.

impl SourceFile {
    // Creates a new SourceFile, demonstrating ownership (takes ownership of path and content).

    fn new(path: String, content: String) -> Self
    // A public method to access a derived property.

    fn line_count(&self) -> u32
    // A private helper method.
    // Internal method for processing
    // Private validation method
}
// Implementation of the Summarizable trait for SourceFile.
// This is a critical pattern: `impl Trait for Struct`.

impl Summarizable for SourceFile {
}
// Additional trait for file operations

trait FileOperations {
}
// Error type for file operations

enum FileError {
    NotFound,
    PermissionDenied,
    InvalidContent,
}

impl FileOperations for SourceFile {
}
</file>
