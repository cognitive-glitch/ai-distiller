<file path="source.rs">

struct SourceFile {
    path: String,
}

trait Summarizable {

    summary(&self) -> String

    short_summary(&self) -> String
}

impl SourceFile {

    new(path: String, content: String) -> Self

    line_count(&self) -> u32
}

impl Summarizable for SourceFile {
}

trait FileOperations {
    type Error;

    read_content(&self) -> Result<&str, Self::Error>

    write_content(&mut self, content: String) -> Result<(), Self::Error>
}

enum FileError {
    NotFound,
    PermissionDenied,
    InvalidContent,
}

impl FileOperations for SourceFile {
}
</file>
