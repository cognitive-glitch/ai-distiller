<file path="source.rb">

module MetaProgrammingUtils:
    self.included(base)

    module ClassMethods:
        add_dynamic_accessor(name, default_value = ...)
        delegate_to(target, *methods*)
        dynamic_methods

module EigenclassDemo:
    self.extended(base)
    custom_new(*args*, &block)

module Trackable:
    self.included(base)

    module ClassMethods:
        track_method(method_name)
        tracked_methods
    track_method_call(method_name, args)
    method_call_history

class ConfigurableModel:
    initialize(initial_config = ...)
    self.add_validation(field, &validation_block)
    evaluate_expression(expression, context = ...)
    add_instance_method(method_name, &block)
    self.method_added(method_name)
    invoke_if_exists(method_name, *args*)
    configure(&block)

class DynamicConstants:
    self.const_missing(const_name)
    self.create_constant(name, value)
    self.list_constants

class SmartDocument < ConfigurableModel:
    initialize(config = ...)
    configure_smart_features
</file>
