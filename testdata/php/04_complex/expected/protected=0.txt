<file path="/home/janreges/ai-distiller/testdata/php/04_complex/source.php">
class Route {
    readonly string $path;
    readonly string $method;
    readonly array $middleware;
    __construct(string $path, string $method, array $middleware)
}
class Validate {
    readonly string $rule;
    readonly string $message;
    __construct(string $rule, string $message)
}
class Inject {
    readonly ?string $service;
    __construct(?string $service)
}
class AttributeProcessor {
    __construct()
    processAttributes(object $instance): array Processed attributes
    findMethodsWithAttribute(ReflectionClass $reflection, string $attributeClass): Generator
}
class ApiController {
    __construct()
    getUserProfile(int $id): array
    updateUserProfile(int $id, array $data): array
    deleteUser(int $id): array
    getRoutes(): array
}
class UserCreateDto {
    string $name;
    string $email;
    int $age;
    array User preferences $preferences;
    static fromArray(array $data): self
    validate(): array Validation errors
}
class ServiceLocator {
    __construct()
    register(string $id, Closure $factory, bool $singleton, array $metadata): void
    resolve(string $id): mixed
    createWithDependencies(string $className): object
    has(string $id): bool
    getMetadata(string $id): array
    getServiceIds(): array
}
class ComplexUserService {
    __construct(UserRepository $repository, EventDispatcher $dispatcher, AttributeProcessor $processor)
    createUser(UserCreateDto $dto): array
    processUsers(array $users): Generator
}
</file>
