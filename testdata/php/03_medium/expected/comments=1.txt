<file path="source.php">
namespace App\Medium;
use Generator;
use Closure;
/** Interface for dependency injection container */
interface ContainerInterface {
    public register(string $id, callable|object $service): void
    public resolve(string $id): mixed
    public has(string $id): bool
}
class Container implements ContainerInterface {
    public register(string $id, callable|object $service): void
    public resolve(string $id): mixed
    public has(string $id): bool
    public autowire(string $className): object
}
/**
 * Generic repository interface
 *
 * @template T
 */
interface RepositoryInterface {
    public find(int $id): ?object
    public findAll(): T[]
    public save(T $entity): T
    public delete(T $entity): void
}
abstract class AbstractRepository implements RepositoryInterface {
    public find(int $id): ?object
    public findAll(): array
    public save(object $entity): object
    public delete(object $entity): void
    public findBy(Closure $criteria): Generator
}
/** Event interface */
interface EventInterface {
    public getName(): string
    public getData(): array
}
/** Event listener interface */
interface EventListenerInterface {
    public handle(EventInterface $event): void
}
class EventDispatcher {
    public subscribe(string $eventName, EventListenerInterface $listener): void
    public dispatch(EventInterface $event): void
    public listen(string $eventName, Closure $handler): void
}
class Event implements EventInterface {
    public __construct(string $name, array<string, mixed> $data = [])
    public getName(): string
    public getData(): array
}
class User {
    public __construct(?int $id, string $name, string $email)
    public getId(): ?int
    public setId(int $id): void
    public getName(): string
    public getEmail(): string
}
class UserRepository extends AbstractRepository {
    public findByEmailDomain(string $domain): Generator
    public getStatistics(): array
}
class UserService {
    public __construct(UserRepository $repository, EventDispatcher $dispatcher)
    public createUser(string $name, string $email): User
    public getUserStatistics(): Generator
}
</file>
