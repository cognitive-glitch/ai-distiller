<file path="/home/janreges/ai-distiller/testdata/php/03_medium/source.php">
interface ContainerInterface {
    register(string $id, callable|object $service): void
    resolve(string $id): mixed
    has(string $id): bool
}
class Container implements ContainerInterface {
    -array Service definitions $services;
    -array Resolved instances $instances;
    register(string $id, callable|object $service): void
    resolve(string $id): mixed
    has(string $id): bool
    autowire(string $className): object
}
interface RepositoryInterface {
    find(int $id): ?object
    findAll(): T[]
    save(object $entity): object
    delete(object $entity): void
}
abstract class AbstractRepository implements RepositoryInterface {
    *array<int, T> In-memory storage $entities;
    *int $nextId;
    find(int $id): ?object
    findAll(): array
    save(object $entity): object
    delete(object $entity): void
    findBy(Closure $criteria): Generator
    *createLazyCollection(Closure $loader): Closure
}
interface EventInterface {
    getName(): string
    getData(): array
}
interface EventListenerInterface {
    handle(EventInterface $event): void
}
class EventDispatcher {
    -array<string, array<EventListenerInterface>> Event listeners $listeners;
    subscribe(string $eventName, EventListenerInterface $listener): void
    dispatch(EventInterface $event): void
    listen(string $eventName, Closure $handler): void
}
class Event implements EventInterface {
    -string $name;
    -array $data;
    __construct(string $name, array $data)
    getName(): string
    getData(): array
}
class User {
    -?int $id;
    -string $name;
    -string $email;
    __construct(?int $id, string $name, string $email)
    getId(): ?int
    setId(int $id): void
    getName(): string
    getEmail(): string
}
class UserRepository extends AbstractRepository {
    findByEmailDomain(string $domain): Generator
    getStatistics(): array
}
class UserService {
    -UserRepository $repository;
    -EventDispatcher $dispatcher;
    __construct(UserRepository $repository, EventDispatcher $dispatcher)
    createUser(string $name, string $email): User
    getUserStatistics(): Generator
}
</file>
