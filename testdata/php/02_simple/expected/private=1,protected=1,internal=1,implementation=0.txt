<file path="source.php">
namespace App\Simple;
use DateTimeInterface;
use JsonSerializable;
/** Interface for entities that can be persisted */
interface PersistableInterface {
    public getId(): ?int
    public setId(int $id): void
    public getCreatedAt(): ?DateTimeInterface
}
/** Interface for cacheable entities */
interface CacheableInterface {
    public getCacheKey(): string
    public getCacheTtl(): int
}
abstract class BaseEntity implements PersistableInterface, JsonSerializable {
    protected ?int $id;
    protected ?DateTimeInterface $createdAt;
    protected ?DateTimeInterface $updatedAt;
    public getId(): ?int
    public setId(int $id): void
    public getCreatedAt(): ?DateTimeInterface
    public setCreatedAt(DateTimeInterface $createdAt): void
    public getUpdatedAt(): ?DateTimeInterface
    public setUpdatedAt(DateTimeInterface $updatedAt): void
    public abstract getEntityName(): string
    protected abstract validate(): bool
    public jsonSerialize(): array
}
/** Trait for timestampable entities */
class trait TimestampableTrait {
    protected updateTimestamps(): void
}
/** Trait for validation functionality */
class trait ValidatableTrait {
    private array<string, string> Validation errors $validationErrors;
    protected addValidationError(string $field, string $message): void
    public getValidationErrors(): array<string, string>
    protected clearValidationErrors(): void
    public hasValidationErrors(): bool
}
class Product extends BaseEntity implements CacheableInterface {
    private string $name;
    private float $price;
    private string $description;
    private bool $isAvailable;
    private list<string> Product categories $categories;
    public const CACHE_TTL = 3600;
    public __construct(string $name, float $price, string $description = '')
    public getName(): string
    public setName(string $name): void
    public getPrice(): float
    public setPrice(float $price): void
    public getEntityName(): string
    protected validate(): bool
    public getCacheKey(): string
    public getCacheTtl(): int
    public addCategory(string $category): void
    public static createSaleProduct(string $name, float $originalPrice, float $discountPercent): self
}
class Category extends BaseEntity {
    public readonly string $name;
    public readonly string $slug;
    private ?Category $parent;
    public __construct(string $name, string $slug)
    public getEntityName(): string
    protected validate(): bool
    public setParent(?Category $parent): void
    public getParent(): ?Category
}
</file>
